import { Constants } from "constants.slint";
import { DeckNode } from "types.slint";
import { LearnScreen } from "screens/learn.slint";
import { DeckSelectScreen } from "screens/deck_select.slint";

export component MainWindow inherits Window {
    preferred-width: 500px;
    preferred-height: 400px;
    in-out property <bool> learning;
    in-out property <DeckNode> current_deck;

    in-out property <int> due_total;
    in-out property <[DeckNode]> deck_tree;
    in property <string> dummy: "ÄÖÜäöüß„“”‘’—–@&$%+=¡¿¢£$¥€²³¼½¬¤¦§©®™°";

    VerticalLayout {
        padding: Constants.padding_standard;
        if !learning: DeckSelectScreen {
            due_total: due_total;
            deck_tree: deck_tree;
            deck_clicked(deck) => {
                current_deck = deck;
                learning = true;
            }
        }
        if learning: LearnScreen {
            deck: current_deck;
            home_clicked => {
                learning = false;
            }
        }
    }
}
